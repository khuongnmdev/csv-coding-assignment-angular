{"version":3,"file":"main-es2015.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.modules.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/backend.service.ts","./src/app/material/material.module.ts","./src/app/task-detail/task-detail.component.ts","./src/app/task-list/task-list.component.ts","./src/main.ts","./src/polyfills.ts","./src/app/app.component.html","./src/app/task-detail/task-detail.component.html","./src/app/task-list/task-list.component.html"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { TaskListComponent } from \"./task-list/task-list.component\";\r\nimport { TaskDetailComponent, TASK_ID_PARAM_KEY } from \"./task-detail/task-detail.component\";\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: TaskListComponent },\r\n  { path: `detail/:${TASK_ID_PARAM_KEY}`, component: TaskDetailComponent },\r\n  { path: '**', redirectTo: '' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\r\nimport { BackendService } from './backend.service';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  tasks = this.backend.tasks();\r\n  users = this.backend.users();\r\n\r\n\r\n  constructor(private backend: BackendService) { }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.modules';\r\nimport { AppComponent } from './app.component';\r\nimport { BackendService } from './backend.service';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { TaskDetailComponent } from './task-detail/task-detail.component';\r\nimport { TaskListComponent } from './task-list/task-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TaskListComponent,\r\n    TaskDetailComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    NoopAnimationsModule,\r\n  ],\r\n  providers: [BackendService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, of, throwError } from \"rxjs\";\r\nimport { delay, tap } from \"rxjs/operators\";\r\n\r\n/**\r\n * This service acts as a mock backend.\r\n *\r\n * You are free to modify it as you see.\r\n */\r\n\r\nexport type User = {\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\nexport type Task = {\r\n  id: number;\r\n  description: string;\r\n  assigneeId: number;\r\n  completed: boolean;\r\n};\r\n\r\nfunction randomDelay() {\r\n  return Math.random() * 1000;\r\n}\r\n\r\n@Injectable()\r\nexport class BackendService {\r\n  storedTasks: Task[] = [\r\n    {\r\n      id: 0,\r\n      description: \"Install a monitor arm\",\r\n      assigneeId: 111,\r\n      completed: false\r\n    },\r\n    {\r\n      id: 1,\r\n      description: \"Move the desk to the new location\",\r\n      assigneeId: 111,\r\n      completed: false\r\n    },\r\n    {\r\n      id: 2,\r\n      description: \"Mock Data\",\r\n      assigneeId: 222,\r\n      completed: false\r\n    }\r\n  ];\r\n\r\n  storedUsers: User[] = [\r\n    { id: 111, name: \"Mike\" },\r\n    { id: 222, name: \"James\" }\r\n  ];\r\n\r\n  lastId = 1;\r\n\r\n  private findTaskById = id =>\r\n    this.storedTasks.find(task => task.id === +id);\r\n\r\n  private findUserById = id => this.storedUsers.find(user => user.id === +id);\r\n\r\n  tasks() {\r\n    return of(this.storedTasks).pipe(delay(randomDelay()));\r\n  }\r\n\r\n  task(id: number): Observable<Task> {\r\n    return of(this.findTaskById(id)).pipe(delay(randomDelay()));\r\n  }\r\n\r\n  users() {\r\n    return of(this.storedUsers).pipe(delay(randomDelay()));\r\n  }\r\n\r\n  user(id: number) {\r\n    return of(this.findUserById(id)).pipe(delay(randomDelay()));\r\n  }\r\n\r\n  newTask(payload: { description: string }) {\r\n    const newTask: Task = {\r\n      id: ++this.lastId,\r\n      description: payload.description,\r\n      assigneeId: null,\r\n      completed: false\r\n    };\r\n\r\n    this.storedTasks.push(newTask);\r\n\r\n    return of(newTask).pipe(delay(randomDelay()));\r\n  }\r\n\r\n  assign(taskId: number, userId: number) {\r\n    return this.update(taskId, { assigneeId: userId });\r\n  }\r\n\r\n  complete(taskId: number, completed: boolean) {\r\n    return this.update(taskId, { completed });\r\n  }\r\n\r\n  update(taskId: number, updates: Partial<Omit<Task, \"id\">>) {\r\n    const foundTask = this.findTaskById(taskId);\r\n\r\n    if (!foundTask) {\r\n      return throwError(new Error(\"task not found\"));\r\n    }\r\n\r\n    const updatedTask = { ...foundTask, ...updates };\r\n\r\n    this.storedTasks = this.storedTasks.map(t =>\r\n      t.id === taskId ? updatedTask : t\r\n    );\r\n\r\n    return of(updatedTask).pipe(delay(randomDelay()));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nconst EXPORTED_MODULES = [\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatButtonModule,\n  MatSelectModule,\n  MatCheckboxModule,\n  MatSnackBarModule\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  exports: [...EXPORTED_MODULES],\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { first, shareReplay, switchMap } from 'rxjs/operators';\r\nimport { BackendService, Task, User } from '../backend.service';\r\n\r\nexport const TASK_ID_PARAM_KEY = 'taskId';\r\n\r\n@Component({\r\n  selector: 'app-task-detail',\r\n  templateUrl: './task-detail.component.html',\r\n  styleUrls: ['./task-detail.component.css']\r\n})\r\nexport class TaskDetailComponent implements OnInit {\r\n\r\n  protected task: Task;\r\n\r\n  private taskId: number;\r\n\r\n  public readonly form: FormGroup;\r\n\r\n  protected isLoaded$ = new BehaviorSubject<boolean>(false);\r\n\r\n  protected readonly users$: Observable<User[]>;\r\n\r\n  constructor(\r\n    activatedRoute: ActivatedRoute,\r\n    private readonly backend: BackendService,\r\n    private readonly fb: FormBuilder,\r\n    private snackBar: MatSnackBar\r\n\r\n  ) {\r\n    this.taskId = Number(activatedRoute.snapshot.paramMap.get(TASK_ID_PARAM_KEY));\r\n\r\n    this.users$ = this.backend.users().pipe(\r\n      shareReplay({ refCount: true, bufferSize: 1 }),\r\n    );\r\n\r\n    this.form = this.initForm();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.backend.task(this.taskId).pipe(\r\n      first(),\r\n    ).subscribe((value) => {\r\n      if (value) {\r\n        this.form.patchValue(value);\r\n        this.isLoaded$.next(true);\r\n      }\r\n    }\r\n    );\r\n  }\r\n\r\n  updateTask() {\r\n    of(this.form.value).pipe(\r\n      switchMap((payload) => {\r\n        return this.backend.update(this.taskId, payload);\r\n      })\r\n    ).subscribe(() => {\r\n      this.snackBar.open(\"Updated new value!\")\r\n    })\r\n  }\r\n\r\n  private initForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [0],\r\n      description: ['', [Validators.required]],\r\n      assigneeId: ['', [Validators.required]],\r\n      completed: [false, Validators.required],\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map, repeatWhen } from 'rxjs/operators';\r\nimport { BackendService, Task, User } from '../backend.service';\r\n\r\n@Component({\r\n  selector: 'app-task-list',\r\n  templateUrl: './task-list.component.html',\r\n  styleUrls: ['./task-list.component.css']\r\n})\r\nexport class TaskListComponent {\r\n\r\n  protected readonly tasks$: Observable<Task[]>;\r\n\r\n  protected readonly users$: Observable<User[]>;\r\n\r\n  private readonly userUpdated$ = new Subject<void>();\r\n\r\n  protected filterValue: number;\r\n\r\n  protected description: string;\r\n\r\n  constructor(private backend: BackendService) {\r\n    this.tasks$ = this.backend.tasks().pipe(\r\n      map(tasks => {\r\n        if (this.filterValue) {\r\n          return tasks.filter(task => task.assigneeId === this.filterValue)\r\n        } else {\r\n          return tasks;\r\n        }\r\n      }),\r\n      repeatWhen(() => this.userUpdated$), // Deprecated operator but still work on this version\r\n    )\r\n    this.users$ = this.backend.users();\r\n  }\r\n\r\n  getAssigneeName(assigneeId: number) {\r\n    this.users$.pipe(\r\n      map(users => {\r\n        users.find(u => u.id === assigneeId)\r\n      })\r\n    )\r\n  }\r\n\r\n  protected addNewTask() {\r\n    this.backend.newTask({ description: this.description }).pipe(\r\n    ).subscribe((value) => {\r\n      this.userUpdated$.next(); // trigger reload list\r\n      this.description = ''; // clear input\r\n    })\r\n  }\r\n\r\n  protected trackByFunction(index: number, task: Task) {\r\n    return task.id;\r\n  }\r\n\r\n  protected filterChange(userId: number) {\r\n    this.filterValue = userId;\r\n    this.userUpdated$.next(); // trigger reload list\r\n  }\r\n}\r\n","import './polyfills';\r\n\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\r\n  // Ensure Angular destroys itself on hot reloads.\r\n  if (window['ngRef']) {\r\n    window['ngRef'].destroy();\r\n  }\r\n  window['ngRef'] = ref;\r\n\r\n  // Otherwise, log the boot error\r\n}).catch(err => console.error(err));","/**\r\n * This file includes polyfills needed by Angular and is loaded before the app.\r\n * You can add your own extra polyfills to this file.\r\n *\r\n * This file is divided into 2 sections:\r\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\r\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\r\n *      file.\r\n *\r\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\r\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\r\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\r\n *\r\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\r\n */\r\n\r\n/***************************************************************************************************\r\n * BROWSER POLYFILLS\r\n */\r\n\r\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\r\n// import 'core-js/es6/symbol';\r\n// import 'core-js/es6/object';\r\n// import 'core-js/es6/function';\r\n// import 'core-js/es6/parse-int';\r\n// import 'core-js/es6/parse-float';\r\n// import 'core-js/es6/number';\r\n// import 'core-js/es6/math';\r\n// import 'core-js/es6/string';\r\n// import 'core-js/es6/date';\r\n// import 'core-js/es6/array';\r\n// import 'core-js/es6/regexp';\r\n// import 'core-js/es6/map';\r\n// import 'core-js/es6/set';\r\n\r\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\r\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\r\n\r\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\r\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\r\n\r\n\r\n/** Evergreen browsers require these. **/\r\nimport 'core-js/es6/reflect';\r\nimport 'core-js/es7/reflect';\r\n\r\n\r\n/** ALL Firefox browsers require the following to support `@angular/animation`. **/\r\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\r\n\r\n\r\n\r\n/***************************************************************************************************\r\n * Zone JS is required by Angular itself.\r\n */\r\nimport 'zone.js';  // Included with Angular CLI.\r\n\r\n\r\n/***************************************************************************************************\r\n * APPLICATION IMPORTS\r\n */\r\n\r\n/**\r\n * Date, currency, decimal and percent pipes.\r\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\r\n */\r\n// import 'intl';  // Run `npm install --save intl`.","export default \"<router-outlet></router-outlet>\";","export default \"<h2 class=\\\"title\\\">Task Detail</h2>\\r\\n<button mat-button color=\\\"warn\\\" routerLink=\\\"/\\\">Go Back</button>\\r\\n\\r\\n<ng-container *ngIf=\\\"isLoaded$ | async as task; else notFoundTask\\\">\\r\\n  <form (submit)=\\\"updateTask()\\\" class=\\\"form\\\" [formGroup]=\\\"form\\\">\\r\\n    <mat-form-field>\\r\\n      <mat-label>Description</mat-label>\\r\\n      <input\\r\\n        matInput\\r\\n        type=\\\"text\\\"\\r\\n        formControlName=\\\"description\\\"\\r\\n        name=\\\"description\\\"\\r\\n      />\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field *ngIf=\\\"users$ | async as users\\\">\\r\\n      <mat-label>Select an user</mat-label>\\r\\n      <mat-select formControlName=\\\"assigneeId\\\">\\r\\n        <mat-option>None</mat-option>\\r\\n        <mat-option *ngFor=\\\"let option of users\\\" [value]=\\\"option.id\\\">\\r\\n          {{ option.name }}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-checkbox color=\\\"primary\\\" formControlName=\\\"completed\\\" name=\\\"completed\\\">\\r\\n      Completed\\r\\n    </mat-checkbox>\\r\\n\\r\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"warn\\\">Save</button>\\r\\n  </form>\\r\\n</ng-container>\\r\\n\\r\\n<ng-template #notFoundTask>\\r\\n  <p>This task is not existed.</p>\\r\\n</ng-template>\\r\\n\";","export default \"<h2 class=\\\"title\\\">Task List</h2>\\r\\n\\r\\n<div class=\\\"filter\\\">\\r\\n  <mat-form-field *ngIf=\\\"users$ | async as users\\\">\\r\\n    <mat-label>Filter by user</mat-label>\\r\\n    <mat-select\\r\\n      [ngModel]=\\\"filterValue\\\"\\r\\n      name=\\\"filter\\\"\\r\\n      (ngModelChange)=\\\"filterChange($event)\\\"\\r\\n    >\\r\\n      <mat-option>All</mat-option>\\r\\n      <mat-option *ngFor=\\\"let option of users\\\" [value]=\\\"option.id\\\">\\r\\n        {{ option.name }}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\\r\\n<ng-container\\r\\n  *ngFor=\\\"let task of tasks$ | async as tasks; trackBy: trackByFunction\\\"\\r\\n>\\r\\n  <div class=\\\"task-list\\\">\\r\\n    <mat-card class=\\\"task-list-item\\\" routerLink=\\\"detail/{{ task.id }}\\\">\\r\\n      <mat-card-title>Task {{ task.id }}</mat-card-title>\\r\\n      <mat-card-content>\\r\\n        <h4>{{ task.description }}</h4>\\r\\n        <h4 class=\\\"status\\\" [ngClass]=\\\"task.completed ? 'completed' : ''\\\">\\r\\n          {{ task.completed ? \\\"Done\\\" : \\\"Incomplete\\\" }}\\r\\n        </h4>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</ng-container>\\r\\n\\r\\n<form (submit)=\\\"addNewTask()\\\" class=\\\"form\\\">\\r\\n  <h3 class=\\\"title\\\">New Task</h3>\\r\\n  <mat-form-field appearance=\\\"fill\\\">\\r\\n    <mat-label>Description</mat-label>\\r\\n    <input matInput type=\\\"text\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\" />\\r\\n  </mat-form-field>\\r\\n  <button type=\\\"submit\\\" mat-raised-button color=\\\"warn\\\">Add new task</button>\\r\\n</form>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}