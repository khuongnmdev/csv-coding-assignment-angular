{"version":3,"mappings":"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","names":["e","webpackEmptyAsyncContext","module","routes","path","component","_task_list_task_list_component__WEBPACK_IMPORTED_MODULE_0__","_task_detail_task_detail_component__WEBPACK_IMPORTED_MODULE_1__","redirectTo","AppRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_4__","exports","AppComponent","backend","tasks","users","_backend_service__WEBPACK_IMPORTED_MODULE_2__","selector","template","AppModule","declarations","_app_component__WEBPACK_IMPORTED_MODULE_1__","_task_list_task_list_component__WEBPACK_IMPORTED_MODULE_5__","_task_detail_task_detail_component__WEBPACK_IMPORTED_MODULE_4__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__","_app_routing_modules__WEBPACK_IMPORTED_MODULE_0__","_angular_forms__WEBPACK_IMPORTED_MODULE_9__","_material_material_module__WEBPACK_IMPORTED_MODULE_3__","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_10__","providers","bootstrap","randomDelay","Math","random","BackendService","id","description","assigneeId","completed","name","storedTasks","find","task","storedUsers","user","pipe","findTaskById","findUserById","payload","newTask","lastId","push","taskId","userId","update","updates","foundTask","Error","updatedTask","map","t","EXPORTED_MODULES","_angular_material_card__WEBPACK_IMPORTED_MODULE_0__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_1__","_angular_material_input__WEBPACK_IMPORTED_MODULE_2__","_angular_material_button__WEBPACK_IMPORTED_MODULE_3__","_angular_material_select__WEBPACK_IMPORTED_MODULE_4__","_angular_material_checkbox__WEBPACK_IMPORTED_MODULE_5__","_angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_6__","MaterialModule","_angular_common__WEBPACK_IMPORTED_MODULE_9__","TASK_ID_PARAM_KEY","TaskDetailComponent","activatedRoute","fb","snackBar","rxjs__WEBPACK_IMPORTED_MODULE_3__","Number","snapshot","paramMap","get","users$","refCount","bufferSize","form","initForm","subscribe","value","patchValue","isLoaded$","next","open","group","_angular_forms__WEBPACK_IMPORTED_MODULE_8__","_angular_router__WEBPACK_IMPORTED_MODULE_9__","_angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_10__","TaskListComponent","tasks$","filterValue","filter","userUpdated$","u","index","bootstrapModule","_app_app_module__WEBPACK_IMPORTED_MODULE_1__","then","window","destroy","ref","console","error","err","__webpack_exports__"],"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions:%20%7B%7D|namespace%20object","webpack:///src/app/app-routing.modules.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/backend.service.ts","webpack:///src/app/material/material.module.ts","webpack:///src/app/task-detail/task-detail.component.ts","webpack:///src/app/task-list/task-list.component.ts","webpack:///src/main.ts","webpack:///src/polyfills.ts","webpack:///src/app/app.component.html","webpack:///src/app/task-detail/task-detail.component.html","webpack:///src/app/task-list/task-list.component.html"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { TaskListComponent } from \"./task-list/task-list.component\";\r\nimport { TaskDetailComponent, TASK_ID_PARAM_KEY } from \"./task-detail/task-detail.component\";\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: TaskListComponent },\r\n  { path: `detail/:${TASK_ID_PARAM_KEY}`, component: TaskDetailComponent },\r\n  { path: '**', redirectTo: '' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\r\nimport { BackendService } from './backend.service';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  tasks = this.backend.tasks();\r\n  users = this.backend.users();\r\n\r\n\r\n  constructor(private backend: BackendService) { }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.modules';\r\nimport { AppComponent } from './app.component';\r\nimport { BackendService } from './backend.service';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { TaskDetailComponent } from './task-detail/task-detail.component';\r\nimport { TaskListComponent } from './task-list/task-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TaskListComponent,\r\n    TaskDetailComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    NoopAnimationsModule,\r\n  ],\r\n  providers: [BackendService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, of, throwError } from \"rxjs\";\r\nimport { delay, tap } from \"rxjs/operators\";\r\n\r\n/**\r\n * This service acts as a mock backend.\r\n *\r\n * You are free to modify it as you see.\r\n */\r\n\r\nexport type User = {\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\nexport type Task = {\r\n  id: number;\r\n  description: string;\r\n  assigneeId: number;\r\n  completed: boolean;\r\n};\r\n\r\nfunction randomDelay() {\r\n  return Math.random() * 1000;\r\n}\r\n\r\n@Injectable()\r\nexport class BackendService {\r\n  storedTasks: Task[] = [\r\n    {\r\n      id: 0,\r\n      description: \"Install a monitor arm\",\r\n      assigneeId: 111,\r\n      completed: false\r\n    },\r\n    {\r\n      id: 1,\r\n      description: \"Move the desk to the new location\",\r\n      assigneeId: 111,\r\n      completed: false\r\n    },\r\n    {\r\n      id: 2,\r\n      description: \"Mock Data\",\r\n      assigneeId: 222,\r\n      completed: false\r\n    }\r\n  ];\r\n\r\n  storedUsers: User[] = [\r\n    { id: 111, name: \"Mike\" },\r\n    { id: 222, name: \"James\" }\r\n  ];\r\n\r\n  lastId = 1;\r\n\r\n  private findTaskById = id =>\r\n    this.storedTasks.find(task => task.id === +id);\r\n\r\n  private findUserById = id => this.storedUsers.find(user => user.id === +id);\r\n\r\n  tasks() {\r\n    return of(this.storedTasks).pipe(delay(randomDelay()));\r\n  }\r\n\r\n  task(id: number): Observable<Task> {\r\n    return of(this.findTaskById(id)).pipe(delay(randomDelay()));\r\n  }\r\n\r\n  users() {\r\n    return of(this.storedUsers).pipe(delay(randomDelay()));\r\n  }\r\n\r\n  user(id: number) {\r\n    return of(this.findUserById(id)).pipe(delay(randomDelay()));\r\n  }\r\n\r\n  newTask(payload: { description: string }) {\r\n    const newTask: Task = {\r\n      id: ++this.lastId,\r\n      description: payload.description,\r\n      assigneeId: null,\r\n      completed: false\r\n    };\r\n\r\n    this.storedTasks.push(newTask);\r\n\r\n    return of(newTask).pipe(delay(randomDelay()));\r\n  }\r\n\r\n  assign(taskId: number, userId: number) {\r\n    return this.update(taskId, { assigneeId: userId });\r\n  }\r\n\r\n  complete(taskId: number, completed: boolean) {\r\n    return this.update(taskId, { completed });\r\n  }\r\n\r\n  update(taskId: number, updates: Partial<Omit<Task, \"id\">>) {\r\n    const foundTask = this.findTaskById(taskId);\r\n\r\n    if (!foundTask) {\r\n      return throwError(new Error(\"task not found\"));\r\n    }\r\n\r\n    const updatedTask = { ...foundTask, ...updates };\r\n\r\n    this.storedTasks = this.storedTasks.map(t =>\r\n      t.id === taskId ? updatedTask : t\r\n    );\r\n\r\n    return of(updatedTask).pipe(delay(randomDelay()));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nconst EXPORTED_MODULES = [\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatButtonModule,\n  MatSelectModule,\n  MatCheckboxModule,\n  MatSnackBarModule\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  exports: [...EXPORTED_MODULES],\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { first, shareReplay, switchMap } from 'rxjs/operators';\r\nimport { BackendService, Task, User } from '../backend.service';\r\n\r\nexport const TASK_ID_PARAM_KEY = 'taskId';\r\n\r\n@Component({\r\n  selector: 'app-task-detail',\r\n  templateUrl: './task-detail.component.html',\r\n  styleUrls: ['./task-detail.component.css']\r\n})\r\nexport class TaskDetailComponent implements OnInit {\r\n\r\n  protected task: Task;\r\n\r\n  private taskId: number;\r\n\r\n  public readonly form: FormGroup;\r\n\r\n  protected isLoaded$ = new BehaviorSubject<boolean>(false);\r\n\r\n  protected readonly users$: Observable<User[]>;\r\n\r\n  constructor(\r\n    activatedRoute: ActivatedRoute,\r\n    private readonly backend: BackendService,\r\n    private readonly fb: FormBuilder,\r\n    private snackBar: MatSnackBar\r\n\r\n  ) {\r\n    this.taskId = Number(activatedRoute.snapshot.paramMap.get(TASK_ID_PARAM_KEY));\r\n\r\n    this.users$ = this.backend.users().pipe(\r\n      shareReplay({ refCount: true, bufferSize: 1 }),\r\n    );\r\n\r\n    this.form = this.initForm();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.backend.task(this.taskId).pipe(\r\n      first(),\r\n    ).subscribe((value) => {\r\n      if (value) {\r\n        this.form.patchValue(value);\r\n        this.isLoaded$.next(true);\r\n      }\r\n    }\r\n    );\r\n  }\r\n\r\n  updateTask() {\r\n    of(this.form.value).pipe(\r\n      switchMap((payload) => {\r\n        return this.backend.update(this.taskId, payload);\r\n      })\r\n    ).subscribe(() => {\r\n      this.snackBar.open(\"Updated new value!\")\r\n    })\r\n  }\r\n\r\n  private initForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [0],\r\n      description: ['', [Validators.required]],\r\n      assigneeId: ['', [Validators.required]],\r\n      completed: [false, Validators.required],\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map, repeatWhen } from 'rxjs/operators';\r\nimport { BackendService, Task, User } from '../backend.service';\r\n\r\n@Component({\r\n  selector: 'app-task-list',\r\n  templateUrl: './task-list.component.html',\r\n  styleUrls: ['./task-list.component.css']\r\n})\r\nexport class TaskListComponent {\r\n\r\n  protected readonly tasks$: Observable<Task[]>;\r\n\r\n  protected readonly users$: Observable<User[]>;\r\n\r\n  private readonly userUpdated$ = new Subject<void>();\r\n\r\n  protected filterValue: number;\r\n\r\n  protected description: string;\r\n\r\n  constructor(private backend: BackendService) {\r\n    this.tasks$ = this.backend.tasks().pipe(\r\n      map(tasks => {\r\n        if (this.filterValue) {\r\n          return tasks.filter(task => task.assigneeId === this.filterValue)\r\n        } else {\r\n          return tasks;\r\n        }\r\n      }),\r\n      repeatWhen(() => this.userUpdated$), // Deprecated operator but still work on this version\r\n    )\r\n    this.users$ = this.backend.users();\r\n  }\r\n\r\n  getAssigneeName(assigneeId: number) {\r\n    this.users$.pipe(\r\n      map(users => {\r\n        users.find(u => u.id === assigneeId)\r\n      })\r\n    )\r\n  }\r\n\r\n  protected addNewTask() {\r\n    this.backend.newTask({ description: this.description }).pipe(\r\n    ).subscribe((value) => {\r\n      this.userUpdated$.next(); // trigger reload list\r\n      this.description = ''; // clear input\r\n    })\r\n  }\r\n\r\n  protected trackByFunction(index: number, task: Task) {\r\n    return task.id;\r\n  }\r\n\r\n  protected filterChange(userId: number) {\r\n    this.filterValue = userId;\r\n    this.userUpdated$.next(); // trigger reload list\r\n  }\r\n}\r\n","import './polyfills';\r\n\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\r\n  // Ensure Angular destroys itself on hot reloads.\r\n  if (window['ngRef']) {\r\n    window['ngRef'].destroy();\r\n  }\r\n  window['ngRef'] = ref;\r\n\r\n  // Otherwise, log the boot error\r\n}).catch(err => console.error(err));","/**\r\n * This file includes polyfills needed by Angular and is loaded before the app.\r\n * You can add your own extra polyfills to this file.\r\n *\r\n * This file is divided into 2 sections:\r\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\r\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\r\n *      file.\r\n *\r\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\r\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\r\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\r\n *\r\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\r\n */\r\n\r\n/***************************************************************************************************\r\n * BROWSER POLYFILLS\r\n */\r\n\r\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\r\n// import 'core-js/es6/symbol';\r\n// import 'core-js/es6/object';\r\n// import 'core-js/es6/function';\r\n// import 'core-js/es6/parse-int';\r\n// import 'core-js/es6/parse-float';\r\n// import 'core-js/es6/number';\r\n// import 'core-js/es6/math';\r\n// import 'core-js/es6/string';\r\n// import 'core-js/es6/date';\r\n// import 'core-js/es6/array';\r\n// import 'core-js/es6/regexp';\r\n// import 'core-js/es6/map';\r\n// import 'core-js/es6/set';\r\n\r\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\r\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\r\n\r\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\r\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\r\n\r\n\r\n/** Evergreen browsers require these. **/\r\nimport 'core-js/es6/reflect';\r\nimport 'core-js/es7/reflect';\r\n\r\n\r\n/** ALL Firefox browsers require the following to support `@angular/animation`. **/\r\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\r\n\r\n\r\n\r\n/***************************************************************************************************\r\n * Zone JS is required by Angular itself.\r\n */\r\nimport 'zone.js';  // Included with Angular CLI.\r\n\r\n\r\n/***************************************************************************************************\r\n * APPLICATION IMPORTS\r\n */\r\n\r\n/**\r\n * Date, currency, decimal and percent pipes.\r\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\r\n */\r\n// import 'intl';  // Run `npm install --save intl`.","export default \"<router-outlet></router-outlet>\";","export default \"<h2 class=\\\"title\\\">Task Detail</h2>\\r\\n<button mat-button color=\\\"warn\\\" routerLink=\\\"/\\\">Go Back</button>\\r\\n\\r\\n<ng-container *ngIf=\\\"isLoaded$ | async as task; else notFoundTask\\\">\\r\\n  <form (submit)=\\\"updateTask()\\\" class=\\\"form\\\" [formGroup]=\\\"form\\\">\\r\\n    <mat-form-field>\\r\\n      <mat-label>Description</mat-label>\\r\\n      <input\\r\\n        matInput\\r\\n        type=\\\"text\\\"\\r\\n        formControlName=\\\"description\\\"\\r\\n        name=\\\"description\\\"\\r\\n      />\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field *ngIf=\\\"users$ | async as users\\\">\\r\\n      <mat-label>Select an user</mat-label>\\r\\n      <mat-select formControlName=\\\"assigneeId\\\">\\r\\n        <mat-option>None</mat-option>\\r\\n        <mat-option *ngFor=\\\"let option of users\\\" [value]=\\\"option.id\\\">\\r\\n          {{ option.name }}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-checkbox color=\\\"primary\\\" formControlName=\\\"completed\\\" name=\\\"completed\\\">\\r\\n      Completed\\r\\n    </mat-checkbox>\\r\\n\\r\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"warn\\\">Save</button>\\r\\n  </form>\\r\\n</ng-container>\\r\\n\\r\\n<ng-template #notFoundTask>\\r\\n  <p>This task is not existed.</p>\\r\\n</ng-template>\\r\\n\";","export default \"<h2 class=\\\"title\\\">Task List</h2>\\r\\n\\r\\n<div class=\\\"filter\\\">\\r\\n  <mat-form-field *ngIf=\\\"users$ | async as users\\\">\\r\\n    <mat-label>Filter by user</mat-label>\\r\\n    <mat-select\\r\\n      [ngModel]=\\\"filterValue\\\"\\r\\n      name=\\\"filter\\\"\\r\\n      (ngModelChange)=\\\"filterChange($event)\\\"\\r\\n    >\\r\\n      <mat-option>All</mat-option>\\r\\n      <mat-option *ngFor=\\\"let option of users\\\" [value]=\\\"option.id\\\">\\r\\n        {{ option.name }}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\\r\\n<ng-container\\r\\n  *ngFor=\\\"let task of tasks$ | async as tasks; trackBy: trackByFunction\\\"\\r\\n>\\r\\n  <div class=\\\"task-list\\\">\\r\\n    <mat-card class=\\\"task-list-item\\\" routerLink=\\\"detail/{{ task.id }}\\\">\\r\\n      <mat-card-title>Task {{ task.id }}</mat-card-title>\\r\\n      <mat-card-content>\\r\\n        <h4>{{ task.description }}</h4>\\r\\n        <h4 class=\\\"status\\\" [ngClass]=\\\"task.completed ? 'completed' : ''\\\">\\r\\n          {{ task.completed ? \\\"Done\\\" : \\\"Incomplete\\\" }}\\r\\n        </h4>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</ng-container>\\r\\n\\r\\n<form (submit)=\\\"addNewTask()\\\" class=\\\"form\\\">\\r\\n  <h3 class=\\\"title\\\">New Task</h3>\\r\\n  <mat-form-field appearance=\\\"fill\\\">\\r\\n    <mat-label>Description</mat-label>\\r\\n    <input matInput type=\\\"text\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\" />\\r\\n  </mat-form-field>\\r\\n  <button type=\\\"submit\\\" mat-raised-button color=\\\"warn\\\">Add new task</button>\\r\\n</form>\\r\\n\";"]}